nav
	.controllers-types(style='float: left')
		.field
			input(type='text', placeholder='type min', value='0')#type-min

		.field
			input(type='text', placeholder='type max', value='1000000000')#type-max

		.field
			select#types
				option(value='kbps') KBPS
				option(value='icmp') ICMP
				option(value='tcp') TCP
				option(value='snmp') SNMP

	.controllers-ifaces(style='float: right')
		.field
			select#iface
#alerts(style="width: 600px; margin: 0 auto")
h1#ifDescr(style="text-align:center")
#container(style="min-width: 900px; height: 400px; margin: 0 auto")

script(type='text/javascript' src='http://code.highcharts.com/stock/highstock.js')
script(type='text/javascript' src='http://code.highcharts.com/stock/modules/exporting.js')

script(type='text/javascript').
	$(function () {
		var ch;
		//populate ifaces options
		$.get('/metrics', function(data){
			for(var i=1 ; i <= data.ifNumber.value; i++)
			{
				$('#iface').append('<option value='+i+'>iface '+i+'</option>');
			}
		});

		$('#type-min').keyup(function(e)
		{
			if(/\D/g.test(this.value))
			{
				this.value = this.value.replace(/\D/g, '');
			}
		});

		$('#type-max').keyup(function(e)
		{
			if(/\D/g.test(this.value))
			{
				this.value = this.value.replace(/\D/g, '');
			}
		});

		var monitor = function(type){
			var alarm = false;
			var alert = '<div  id="alarme" class="alert alert-warning alert-dismissible" role="alert" style="width:600px">' +
				  '<button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>';
			if($('#type-min').val() > type){
				alert += ' <strong>Alerta!</strong> ' + $("#types").val() + ' < ' + $('#type-min').val() + ' </div>';
				alarm = true;
			}
			if($('#type-max').val() < type){
				alert += '<strong>Alerta!</strong> ' + $("#types").val() + ' > ' + $('#type-max').val() +' </div>';
				alarm = true;
			}

			if(document.getElementById("alarme") == null && alarm){
				$("#alerts").append(alert);
			}
		};


		var seriesOptions = [],
			oldIndex = 0;

			seriesOptions[0] = {
				name: "KBPS",
				data: []
			};
			seriesOptions[1] = {
				name: "ICMP",
				data: []
			};
			seriesOptions[2] = {
				name: "TCP",
				data: []
			};
			seriesOptions[3] = {
				name: "SNMP",
				data: []
			};	


				ch = new Highcharts.StockChart({

					chart: {
						renderTo: 'container',
						animation: {
			                duration: 1500,
			            },

						events: {
							load: function () {

								// set up the updating of the chart each second

									var kbps = this.series[0];
									var icmp = this.series[1];
									var tcp  = this.series[2];
									var snmp = this.series[3];
									var monitorAux = 1;
									setInterval(function () {
										var index = $('#iface').val();
										$.getJSON('/chart?ifNumber='+ index,    function (data) {
											var time = new Date();
											$("#ifDescr").html(data.ifDescr.value);

											if (oldIndex != index) {
												kbps.setData([], false);
												icmp.setData([], false);
												tcp.setData([], false);
												snmp.setData([], false);

												oldIndex = index;
											};
											kbps.addPoint([time.getTime(), data.kbps],false);
											icmp.addPoint([time.getTime(), data.icmp],false);
											tcp.addPoint([time.getTime(),  data.tcp],false);
											snmp.addPoint([time.getTime(), data.snmp],true); //redraws only in the last point

											if(monitorAux % 5 == 0){
												if($('#types').val() == 'kbps')
													monitor(data.kbps);
												
												else if($('#types').val() == 'icmp')
													monitor(data.icmp);
												
												else if($('#types').val() == 'tcp')
													monitor(data.tcp);
												
												else if($('#types').val() == 'snmp')
													monitor(data.snmp);

											}
											monitorAux ++;
										});
									}, 1000);
								}
						}
					},
					rangeSelector: {
						selected: 4
					},
					plotOptions: {
					    series: {
						compare: 'value'
					    }
					},


					
					tooltip: {
						pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',
						valueDecimals: 2
					},

					series: seriesOptions
				});
	});
